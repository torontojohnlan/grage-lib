{"version":3,"file":"esp8266.js","sourceRoot":"","sources":["esp8266.ts"],"names":[],"mappings":";;;AAAA,IAAY,OAIX;AAJD,WAAY,OAAO;IACf,uCAAY,CAAA;IACZ,qDAAmB,CAAA;IACnB,yCAAa,CAAA;AACjB,CAAC,EAJW,OAAO,uBAAP,OAAO,QAIlB;AAED,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,qDAAa,CAAA;IACb,uDAAc,CAAA;IACd,qDAAa,CAAA;IACb,mDAAY,CAAA;IACZ,qDAAa,CAAA;AACjB,CAAC,EANW,aAAa,6BAAb,aAAa,QAMxB;AAED,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,2CAAW,CAAA;IACX,yCAAU,CAAA;AACd,CAAC,EAHW,UAAU,0BAAV,UAAU,QAGrB;AAED,IAAY,GAaX;AAbD,WAAY,GAAG;IACX,0BAAO,CAAA;IACP,yBAAM,CAAA;IACN,yBAAM,CAAA;IACN,yBAAM,CAAA;IACN,yBAAM,CAAA;IACN,0BAAO,CAAA;IACP,0BAAO,CAAA;IACP,0BAAO,CAAA;IACP,0BAAO,CAAA;IACP,yBAAM,CAAA;IACN,2BAAO,CAAA;IACP,4BAAQ,CAAA;AACZ,CAAC,EAbW,GAAG,mBAAH,GAAG,QAad;AAMD,SAAiB,OAAO,CAAC,GAAQ,EAAE,IAAa;IACxC,OAAO;QACH,OAAO,EAAE,SAAS;QAClB,GAAG,EAAE,IAAI;KACZ,CAAA;AACT,CAAC;AALD,0BAKC;AACD,SAAgB,YAAY,CAAC,GAAQ,EAAE,KAAiB;IAChD,OAAO;QACH,OAAO,EAAE,cAAc;QACvB,GAAG,EAAE,KAAK;KACb,CAAC;AACV,CAAC;AALD,oCAKC;AACD,SAAgB,eAAe,CAAC,GAAQ,EAAE,IAAmB;IACrD,OAAO;QACH,OAAO,EAAE,iBAAiB;QAC1B,GAAG,EAAE,IAAI;KACZ,CAAC;AACV,CAAC;AALD,0CAKC;AACD,SAAgB,eAAe,CAAC,GAAQ;IAChC,OAAO;QACH,OAAO,EAAE,iBAAiB;QAC1B,GAAG;KACN,CAAC;AACV,CAAC;AALD,0CAKC","sourcesContent":["export enum PinMode {\r\n    INPUT = 0x00,\r\n    INPUT_PULLUP = 0x02,\r\n    OUTPUT = 0x01,\r\n}\r\n\r\nexport enum InterruptMode {\r\n    RISING = 0x01,\r\n    FALLING = 0x02,\r\n    CHANGE = 0x03,\r\n    ONLOW = 0x04,\r\n    ONHIGH = 0x05,\r\n}\r\n\r\nexport enum LogicLevel {\r\n    HIGH = 0x01,\r\n    LOW = 0x00,\r\n}\r\n\r\nexport enum Pin {\r\n    D0 = 16,\r\n    D1 = 5,\r\n    D2 = 4,\r\n    D3 = 0,\r\n    D4 = 2,\r\n    D5 = 14,\r\n    D6 = 12,\r\n    D7 = 13,\r\n    D8 = 15,\r\n    D9 = 3,\r\n    D10 = 1,\r\n    _A0 = 17,\r\n}\r\n\r\nexport type StateData={\r\n    pinReadings:number[],\r\n}\r\n\r\nexport function  pinMode(pin: Pin, mode: PinMode) {\r\n        return {\r\n            command: 'pinMode',\r\n            pin, mode,\r\n        }\r\n}\r\nexport function digitalWrite(pin: Pin, value: LogicLevel) {\r\n        return {\r\n            command: 'digitalWrite',\r\n            pin, value,\r\n        };\r\n}\r\nexport function attachInterrupt(pin: Pin, mode: InterruptMode) {\r\n        return {\r\n            command: 'attachInterrupt',\r\n            pin, mode,\r\n        };\r\n}\r\nexport function detachInterrupt(pin: Pin) {\r\n        return {\r\n            command: 'detachInterrupt',\r\n            pin\r\n        };\r\n}\r\n\r\n"]}